extends ../layout

block content

   h2(class='ls-title') Authentication with REST PKI Core

   form(id='signInForm', method='POST')

      //- Render the token in a hidden input field.
      input(type="hidden" id="stateField" name="state" value=state)
      input(type="hidden" id="toSignHashValueField" name="toSignHashValue" value=toSignHashValue)
      input(type="hidden" id="toSignHashAlgorithmField" name="toSignHashAlgorithm" value=toSignHashAlgorithm)
      input(type="hidden" id="certificateField" name="certificate")
      input(type="hidden" id="signatureField" name="signature")

      //- Render a select (combo box) to list the user's certificates. For now it will be empty, we'll populate it
      //- later on (see signature-form.js).
      .form-group
         label(for='certificateSelect') Choose a certificate
         select(id='certificateSelect', class='form-control')

      //- Action buttons. Notice that the "Sign In" button is NOT a submit button. When the user clicks the button,
      //- we must first use the Web PKI component to perform the client-side computation necessary and only when
      //- that computation is finished we'll submit the form programmatically (see signature-form.js).
      button(id='signInButton', type='button', class='btn btn-primary') Sign In
      button(id='refreshButton', type='button', class='btn btn-outline-primary') Refresh Certificates

block scripts

   //- The file below contains the JS lib for accessing the Web PKI component. For more information, see:
   //- https://webpki.lacunasoftware.com/#/Documentation
   script(type="text/javascript", src="https://cdn.lacunasoftware.com/libs/web-pki/lacuna-web-pki-2.14.0.min.js", integrity="sha256-m0Wlj4Pp61wsYSB4ROM/W5RMnDyTpqXTJCOYPBNm300=", crossorigin="anonymous")

   //- The file below contains the logic for calling the Web PKI component. It is only an example, feel free to alter
   //- it to meet your application's needs. You can also bring the code into the javascript block below if you prefer.
   script(src="/javascripts/sign-hash-form.js")

   script.
      $(document).ready(function() {
         // Once the page is ready, we call the init() function on the javascript code (see signature-form.js).
         signHashForm.init({
            // The form that should be submitted when the operation is complete
            form: $('#signInForm'),
            // The select element (combo box) to list the certificates
            certificateSelect: $('#certificateSelect'),
            // The "refresh" button
            refreshButton: $('#refreshButton'),
            // The button that initiates the operation
            signButton: $('#signInButton'),
            // Hidden field that holds the algorithm of the hash that needs to be signed
            toSignHashAlgorithmField: $('#toSignHashAlgorithmField'),
            // Hidden field that holds the value of the hash that needs to be signed
            toSignHashValueField: $('#toSignHashValueField'),
            // Hidden field that will be filled with the certificate selected by the user
            certificateField: $('#certificateField'),
            // Hidden field that will be filled with the signature of the hash
            signatureField: $('#signatureField')
         });
      });