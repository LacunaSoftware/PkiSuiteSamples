<h2 class="ls-title">PAdES Signature with REST PKI</h2>

<div class="ls-content">

  <%= form_tag(:pades_signature_rest, {:id => 'signForm'}) do %>

    <% # Render the @token in a hidden input field %>
    <%= hidden_field_tag(:token, @token) %>

    <div class="form-group">
      <label>File to sign</label>
      <p>You are signing <a href='/download/<%= @file_to_sign %>'>this document</a>.</p>
    </div>

    <%
      # Render a select (combo box) to list the user's certificates. For now it
      # will be empty, we'll populate it later on
      # (see assets/javascripts/signature-form.js).
    %>
    <div class="form-group">
      <%= label_tag('certificateSelect', 'Choose a certificate') %>
      <%= select_tag('certificateSelect', nil, {:class => 'custom-select'}) %>
    </div>

    <%
      # Action buttons. Notice that the "Sign In" button is NOT a submit button.
      # When the user clicks the button, we must first use the Web PKI component
      # to perform the client-side computation necessary and only when that
      # computation is finished we'll submit the form programmatically (see
      # assets/javascripts/signature-form.js).
    %>
    <div class="form-group">
      <button id="signButton" type="button" class="btn btn-primary">
        <i class="fas fa-file-signature"></i> Sign File
      </button>
      <button id="refreshButton" type="button" class="btn btn-outline-primary">
        <i class="fas-fa-retweet"></i> Refresh Certificates
      </button>
    </div>

  <% end %>

</div>

<%
  # The file below contains the JS lib for accessing the Web PKI component. For
  # more information, see: https://webpki.lacunasoftware.com/#/Documentation
%>
<%= javascript_pack_tag :application, src: 'https://get.webpkiplugin.com/Scripts/LacunaWebPKI/lacuna-web-pki-2.12.0.min.js', integrity: 'sha256-jDF8LDaAvViVZ7JJAdzDVGgY2BhjOUQ9py+av84PVFA=', crossorigin: 'anonymous' %>

<%
  # The file below contains the necessary calls to the Web component. Once the
  # necessary computations have been done, the javascript code will submit our
  # form.
%>
<%= javascript_include_tag 'signature-form' %>
<script type="text/javascript" charset="utf-8">
    $(document).ready(function () {
        // Once the page is ready, we call the init() function on the javascript
        // code (see signature-form.js).
        signatureForm.init({
            token: '<%= @token %>',                     // the token acquired from REST PKI.
            form: $('#signForm'),                       // the form that should be submitted when the operation is complete.
            certificateSelect: $('#certificateSelect'), // the select element (combo box) to list the certificates.
            refreshButton: $('#refreshButton'),         // the "refresh" button.
            signButton: $('#signButton')                // the button that initiates the operation.
        });
    });
</script>